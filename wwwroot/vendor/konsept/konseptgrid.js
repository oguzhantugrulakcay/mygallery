!function (e) { "use strict"; e.fn.konseptGrid = function (t) { t = e.extend({}, e.fn.konseptGrid.defaultOptions, t); var a = 1; return this.each(function () { var n = "", i = e(this); (function t(a, n) { var i = e('<table class="table"></table>'); a.addClass("konsept-grid"), a.addClass("table-responsive"), a.addClass("konsept-grid-border"), a.append(i); var s = e('<tbody><tr><td colspan="' + ("none" === n.selection ? n.columns.length : n.columns.length + 1) + '"><div class="empty-content"></div></td></tr></tbody>'), l = e('<div class="table-footer"><nav></nav><div class="page-info"></div></div>'); return n.selection = n.selection || "none", function t(a, n, i) { var s = e("<thead></thead>"), l = e("<tr></tr>"), o = e("<th></th>"); if ("checkbox" === i) { var d = e('<th width="30px"><input type="checkbox" class="select-all" /></th>'); l.append(d) } e.each(n, function (e, t) { void 0 === t.sortable && (t.sortable = !0), l.append(o.clone().text(t.title).attr("width", t.width).attr("align", t.align).attr("data-sortable", t.sortable).attr("data-sortby", t.field)) }), s.append(l), a.append(s) }(i, n.columns, n.selection), i.append(s), i.after(l), "true" === n.inlineAdd && l.append(e('<button class="inline-add btn btn-sm btn-primary"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16"><path fill-rule="evenodd" d = "M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z" /></svg ></button>')), "true" === n.inlineConfirm && l.append(e('<button class="inline-confirm btn btn-sm btn-success"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-check2" viewBox="0 0 16 16"><path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z"/></svg></button>')), a.append('<div class="loader" style="display: none;"><i class="fa fa-spinner fa-4x fa-spin"></i></div>'), this })(i, t); var s = { settings: t, el: e(this), load: function (s) { i.find(".loader").show(), (s = s || !1) && (a = 1); var l = this.settings.extraParameters(); l.skip = (a - 1) * this.settings.pageSize, l.take = this.settings.pageSize, l.sortBy = n, e.ajax({ type: "POST", url: this.settings.url, contentType: "application/json; charset=utf-8", data: JSON.stringify(l), dataType: "json", success: function (n) { var s, l, o, d, r, c, p; i.find(".loader").hide(), i.find(".select-all").prop("checked", !1), s = i, l = n.data, o = t.columns, d = t.selection, r = e("<tr></tr>"), c = e("<td></td>"), (p = s.find("tbody")).empty(), void 0 !== l && e.each(l, function (t, a) { var n = r.clone(); if (n.data("item", a), "checkbox" === d) { var i = e('<td width="30px;" align="center"><input type="checkbox" class="selector" /></td>'); n.append(i) } e.each(o, function (e, t) { var i = c.clone(); if (void 0 === t.template) "date" === t.type ? void 0 == a[t.field] ? n.append(i.text("")) : n.append(i.text(moment(a[t.field]).format(t.format))) : n.append(i.text(a[t.field])); else { var s = Mustache.render(t.template, a); i.append(s), n.append(i) } }), p.append(n) }), void 0 != e(s).data().konseptGrid.settings.onDataLoaded && e(s).data().konseptGrid.settings.onDataLoaded(), function t(a, n, i) { var s = e('<ul class="pagination"></ul>'), l = e('<li class="page-item"></li>'), o = e('<a class="page-link" href="#">&nbsp;</a>'), d = a.find("nav"); if (d.empty(), i > 0 ? s.append('<li class="page-item"><a class="page-link" href="#" data-page="1"><span>&laquo;</span></a></li>') : s.append('<li class="page-item"><a class="page-link" href="#" data-page="0"><span>&laquo;</span></a></li>'), i > 0) for (var r = function e(t, a) { var n, i = [], s = []; if (i.push(1), a <= 1) return i; for (let l = t - 2; l <= t + 2; l++)l < a && l > 1 && i.push(l); return i.push(a), i.forEach(function (e) { n && (e - n == 2 ? s.push(n + 1) : e - n != 1 && s.push("...")), s.push(e), n = e }), s }(n, i), c = 0; c < r.length; c++) { var p = l.clone().append(o.clone().attr("data-page", r[c]).text(r[c])); r[c] === n ? (p.addClass("active"), s.append(p)) : (p.removeClass("active"), s.append(p)) } else s.append(l.clone().html(o.clone().attr("data-page", 0).text(0))); i > 0 ? s.append('<li class="page-item"><a class="page-link" href="#" data-page="' + i + '"><span>&raquo;</span></a></li>') : s.append('<li class="page-item"><a class="page-link" href="#" data-page="0"><span>&raquo;</span></a></li>'), d.append(s) }(i, a, Math.ceil(n.count / t.pageSize)), function t(a, n, i, s, l, o) { var d = a.find(".page-info"); if (0 == s || void 0 == l || !1 == l) e(d).html(""); else { var r = (n - 1) * i + 1, c = r + i; c > s && (c = s), e(d).html(r + "-" + c + " of " + s + " items") } }(i, a, t.pageSize, n.count, t.enablePageInfo) } }) }, getSelectedItems: function () { var t = i.find(".selected").map(function (t, a) { return e(a).data("item") }).toArray(); return 0 === t.length ? void 0 : t }, getSelectedValues: function (e) { var t = this.getSelectedItems(); if (void 0 !== t) return t.map(function (t) { return t[e] }) }, getSelectedValue: function (e) { var t = this.getSelectedValues(e); return void 0 === t ? void 0 : t[0] }, getSelectedItem: function () { var e = this.getSelectedItems(); return void 0 === e ? void 0 : e[0] } }; return i.on("click", ".page-link", function (t) { t.preventDefault(); var n = e(this).data("page"); n > 0 && (a = parseInt(n), s.load()) }), i.on("change", ".selector", function (t) { var a = e(this).is(":checked"), n = e(this).closest("tr"); a ? n.addClass("selected") : n.removeClass("selected") }), i.on("click", ".select-all", function (t) { var a = e(this).is(":checked"); i.find("tr .selector").prop("checked", a).change() }), i.on("mouseover", "th", function (t) { !0 === e(this).data("sortable") && e(this).css("cursor", "pointer") }), i.on("click", "th", function (t) { i.find(".sort-icon").remove(); var a = e(this); if (!0 === a.data("sortable")) { var l = a.data("dir"); "" !== (n = a.data("sortby")) && (void 0 === l || "asc" === l ? (a.append('<span class="sort-icon"><i class="bi bi-arrow-down"></i></i></span>'), a.data("dir", "desc"), n += " asc") : (a.append('<span class="sort-icon"><i class="bi bi-arrow-up"></i></span>'), a.data("dir", "asc"), n += " desc"), s.load()) } }), e(this).data("konseptGrid", s), s.load(), e(this) }); function n(e, t) { return e.replace(/\{\{\s?(\w+)\s?\}\}/g, function (e, a) { return t[a] || "" }) } }, e.fn.konseptGrid.defaultOptions = { columns: [], dataSource: [], pageSize: 10, enablePageInfo: !1, url: "", selection: "", inlineAdd: "false", inlineConfirm: "false", extraParameters: function () { }, onDataLoaded: void 0 } }(jQuery);